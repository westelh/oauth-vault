{{- if .Values.vault.sidecar.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "oauth-vault.agentConfigmapName" . }}
  labels:
    {{- include "oauth-vault.labels" . | nindent 4 }}
data:
  config.hcl: |
    auto_auth {
      {{ include "oauth-vault.sidecarAuthMethod" . | nindent 6 }}
      sink "file" {
        config = {
          path = "/home/vault/sink"
        }
      }
    }

    template {
      source      = "/vault/agent/config.ctmpl"
      destination = {{ include "oauth-vault.applicationConfigPath" . | quote }}
    }

    vault {
      address = {{ .Values.vault.server.address | quote }}
    }
  config.ctmpl: |
    {{`{{- with secret "kv/data/secrets/oauth-vault" -}}`}}
    ktor:
      application:
        modules:
          {{- .Values.oauthVault.modules | toYaml | nindent 8 }}
      deployment:
        host: 0.0.0.0
        port: 8080
    user:
      oidc:
        provider: default
        client: oauth-vault
        callback: "http://localhost:8080/user/oidc/callback"
        scopes:
          - openid
          - google
    oauth:
      google:
        clientId: {{`{{ .Data.data.client_id }}`}}
        clientSecret: {{`{{ .Data.data.client_secret }}`}}
        callback: "http://localhost:8080/google/callback"
    api:
      auth:
        jwt:
          issuer: "xxxxxx"
          audience: "xxxxx"
    vault:
      addr: "http://host.docker.internal:8200"
      kv: kv
    {{`{{- end }}`}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "oauth-vault.proxyConfigmapName" . }}
  labels:
    {{- include "oauth-vault.labels" . | nindent 4 }}
data:
  config.hcl: |
    auto_auth {
      {{- include "oauth-vault.sidecarAuthMethod" . | nindent 6 }}
      sink "file" {
        config = {
          path = "/home/vault/sink"
        }
      }
    }
    vault {
      address = {{ .Values.vault.server.address | quote }}
    }
    api_proxy {
      use_auto_auth_token = true
    }
    listener "tcp" {
      address = "127.0.0.1:8100"
      tls_disable = true
    }
{{- end }}